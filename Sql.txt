select firstName ,lastName,city,state from Person left outer join address on person.personId=address.personId;

CREATE TABLE Person(
personId int,
lastName Varchar(20),
firstName Varchar(20));
INSERT INTO Person VALUES (1, 'Wang', 'Allen');
INSERT INTO Person VALUES (2, 'Alice', 'Bob');
select * from Person;  

CREATE TABLE Address(
addressId int,
personId int,
city Varchar(20),
state Varchar(20));
INSERT INTO Address VALUES (1, 2, 'New York City', 'New York');
INSERT INTO Address VALUES (2, 3, 'Leetcode', 'California');
select * from Address;  


-- Create a custom type for low_fats and recyclable
CREATE TYPE enum_yes_no AS OBJECT (
    value CHAR(1 CHAR),
    STATIC FUNCTION is_valid(value CHAR) RETURN NUMBER
);

-- Create table if not exists Products
CREATE TABLE Products (
    product_id NUMBER,
    low_fats enum_yes_no,
    recyclable enum_yes_no
);

-- Truncate table Products
TRUNCATE TABLE Products;

-- Insert data into Products
INSERT INTO Products (product_id, low_fats, recyclable) VALUES (0, enum_yes_no('Y'), enum_yes_no('N'));
INSERT INTO Products (product_id, low_fats, recyclable) VALUES (1, enum_yes_no('Y'), enum_yes_no('Y'));
INSERT INTO Products (product_id, low_fats, recyclable) VALUES (2, enum_yes_no('N'), enum_yes_no('Y'));
INSERT INTO Products (product_id, low_fats, recyclable) VALUES (3, enum_yes_no('Y'), enum_yes_no('Y'));
INSERT INTO Products (product_id, low_fats, recyclable) VALUES (4, enum_yes_no('N'), enum_yes_no('N'));
select product_id from Products where low_fats = 'Y' and recyclable = 'Y';



-- Create table if not exists Salary
CREATE TABLE Salary (
    id NUMBER,
    name VARCHAR2(100),
    sex CHAR(1),
    salary NUMBER
);

-- Insert data into Salary
INSERT INTO Salary (id, name, sex, salary) VALUES (1, 'A', 'm', 2500);
INSERT INTO Salary (id, name, sex, salary) VALUES (2, 'B', 'f', 1500);
INSERT INTO Salary (id, name, sex, salary) VALUES (3, 'C', 'm', 5500);
INSERT INTO Salary (id, name, sex, salary) VALUES (4, 'D', 'f', 500);

update SALARY
SET SEX = CASE WHEN SEX = 'm' THEN 'f' 
               WHEN sex = 'f' THEN 'm' 
          END

select * from Salary;






-- Create table if not exists Followers
CREATE TABLE Followers (
    user_id NUMBER,
    follower_id NUMBER
);


-- Insert data into Followers
INSERT INTO Followers (user_id, follower_id) VALUES (0, 1);
INSERT INTO Followers (user_id, follower_id) VALUES (1, 0);
INSERT INTO Followers (user_id, follower_id) VALUES (2, 0);
INSERT INTO Followers (user_id, follower_id) VALUES (2, 1);




SELECT user_id, COUNT(DISTINCT follower_id) as followers_count
FROM Followers GROUP BY user_id
ORDER BY user_id ;



CREATE TABLE Employee (
    id NUMBER,
    name VARCHAR2(255),
    salary NUMBER,
    managerId NUMBER
);

-- Truncate table Employee
TRUNCATE TABLE Employee;

-- Insert data into Employee
INSERT INTO Employee (id, name, salary, managerId) VALUES (1, 'Joe', 70000, 3);
INSERT INTO Employee (id, name, salary, managerId) VALUES (2, 'Henry', 80000, 4);
INSERT INTO Employee (id, name, salary, managerId) VALUES (3, 'Sam', 60000, NULL);
INSERT INTO Employee (id, name, salary, managerId) VALUES (4, 'Max', 90000, NULL);